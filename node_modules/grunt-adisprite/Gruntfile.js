/*
 * grunt-adisprite
 * https://github.com/adi/adisprite
 *
 * Copyright (c) 2014 twlk28
 * Licensed under the MIT license.
 */

'use strict';

module.exports = function (grunt) {

    // Project configuration.
    grunt.initConfig({

        // Configuration to be run (and then tested).
        adisprite: {
            all: {
                // Source css folder
                srcCss: 'src/css',
                // List of images to add to sprite (each sub-folder generate 1 image)
                srcImg: 'src/slice',
                // Target css file folder, can be the same as source
                destCss: 'dest/css',
                // Address of target image's folder, target image's name = source folder's name
                destImg: 'dest/img/sprite',
                // OPTIONAL: Image placing algorithm: top-down, left-right, diagonal, alt-diagonal, binary-tree
                'algorithm': 'binary-tree',
                // OPTIONAL: Padding between imagesm
                'padding': 4,
                // OPTIONAL: Rendering engine: auto, canvas, gm
                'engine': 'gm',
                // OPTIONAL: Preferences for resulting image
                'exportOpts': {
                    // Image format (by default will use png)
                    'format': 'png',
                    // Quality of image (gm only)
                    'quality': 90
                }
            }
        }



    });

    grunt.loadTasks('tasks');

    grunt.registerTask('release', ['adisprite']);

};
